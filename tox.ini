[tox]
minversion = 3.14.0
envlist =
    fix_lint
    py38
    py37
    py36
isolated_build = true
skip_missing_interpreters = true

[testenv]
deps =
    setuptools_scm[toml]>=3.4
    pkgconfig
    cython
description = run tests with {basepython}
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    _COVERAGE_SRC = {envsitepackagesdir}/avroc
    PYTHONIOENCODING=utf-8
passenv = https_proxy http_proxy no_proxy HOME PYTEST_* PIP_* CI_RUN TERM
extras = testing
install_command = python -m pip install {opts} {packages} --disable-pip-version-check
commands =
    python -m coverage erase
    python -m coverage run -m pytest \
    --junitxml {toxworkdir}/junit.{envname}.xml \
    tests {posargs}

    python -m coverage combine
    python -m coverage report --skip-covered --show-missing
    python -m coverage xml -o {toxworkdir}/coverage.{envname}.xml
    python -m coverage html -d {envtmpdir}/htmlcov

[testenv:dev]
description = generate a DEV environment
extras = testing
usedevelop = true
commands =
    python -m pip list --format=columns
    python -c 'import sys; print(sys.executable)'

[testenv:fix_lint]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
basepython = python3.8
passenv = *
deps =
    pre-commit >= 2.0.0, <3
skip_install = True
commands =
    pre-commit run --all-files --show-diff-on-failure
    python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 120
known_first_party = avroc
known_third_party =Cython,pkgconfig,pytest,setuptools

[flake8]
max-complexity = 22
max-line-length = 120
ignore = E203, W503, C901, E402

[pep8]
max-line-length = 120
